{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(curl:*)",
      "Bash(ls:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma migrate dev --name init)",
      "Bash(docker compose:*)",
      "Bash(npm run build:*)",
      "Bash(brew install:*)",
      "Bash(open:*)",
      "Bash(docker:*)",
      "Bash(brew reinstall:*)",
      "Bash(DATABASE_URL=\"postgresql://user:password@localhost:5432/youtube_analytics?schema=public\" npx prisma migrate dev --name init)",
      "Bash(npx prisma:*)",
      "Bash(DATABASE_URL=\"postgresql://user:password@localhost:5432/youtube_analytics?schema=public\" npx prisma db push)",
      "Bash(node:*)",
      "Bash(source:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(redis-cli:*)",
      "Bash(grep:*)",
      "Bash(npm start)",
      "Bash(kill:*)",
      "Bash(npx next dev:*)",
      "Bash(PORT=3000 npx next dev)",
      "Bash(NODE_ENV=development npm run dev)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(HOST=0.0.0.0 PORT=3000 npm run dev)",
      "Bash(sudo:*)",
      "Bash(npx:*)",
      "Bash(echo $SHELL)",
      "Bash(echo $HOME)",
      "Bash(claude 你是什么大模型)",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:docs.browsermcp.io)",
      "Bash(npm:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp:*)",
      "Bash(/dev/null)",
      "Bash(/Applications/Docker.app/Contents/Resources/bin/docker compose up -d redis)",
      "Bash(psql:*)",
      "Bash(brew services start:*)",
      "Bash(createdb:*)",
      "Bash(/opt/homebrew/opt/postgresql@16/bin/createdb youtube_analytics)",
      "Bash(/opt/homebrew/opt/postgresql@16/bin/psql:*)",
      "Bash(HOST=0.0.0.0 npm run dev)",
      "Bash(chmod:*)",
      "mcp__browsermcp__browser_navigate",
      "Bash(true)",
      "Bash(./test-api-endpoints.sh:*)",
      "Bash(./test-api-simple.sh:*)",
      "Bash(# 快速测试剩余端点\nBASE_URL=\"\"http://localhost:3001/api\"\"\n\n# 测试剩余端点\necho \"\"继续测试剩余端点...\"\"\necho \"\"\"\"\n\n# YouTube API\necho -n \"\"[GET] /youtube/channel?channelId=UCtest123: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/youtube/channel?channelId=UCtest123\"\"\n\n# 管理员端点\necho -n \"\"[GET] /admin/config: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/admin/config\"\"\n\necho -n \"\"[POST] /admin/cleanup: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/admin/cleanup\"\"\n\necho -n \"\"[POST] /admin/generate-all-daily-stats: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/admin/generate-all-daily-stats\"\"\n\n# 开发端点\necho -n \"\"[GET] /dev/test-setup: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/dev/test-setup\"\"\n\necho -n \"\"[POST] /dev/add-test-channel: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/dev/add-test-channel\"\"\n\n# Cron 端点\necho -n \"\"[POST] /cron/run: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/cron/run\"\" \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d ''{\"\"task\"\":\"\"sync\"\"}''\n\necho -n \"\"[POST] /cron/daily-analytics: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/cron/daily-analytics\"\"\n\necho -n \"\"[POST] /cron/refresh-channel-metrics: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/cron/refresh-channel-metrics\"\"\n\necho -n \"\"[POST] /cron/refresh-video-stats: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/cron/refresh-video-stats\"\"\n\n# 动态路由\necho -n \"\"[GET] /channels/UCtest123: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/channels/UCtest123\"\"\n\necho -n \"\"[DELETE] /channels/UCtest123: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X DELETE \"\"$BASE_URL/channels/UCtest123\"\"\n\necho -n \"\"[PATCH] /channels/UCtest123: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X PATCH \"\"$BASE_URL/channels/UCtest123\"\" \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d ''{\"\"name\"\":\"\"Updated Name\"\"}''\n\necho -n \"\"[GET] /channels/UCtest123/videos: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/channels/UCtest123/videos\"\"\n\necho -n \"\"[GET] /channels/UCtest123/daily-stats: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" \"\"$BASE_URL/channels/UCtest123/daily-stats\"\"\n\necho -n \"\"[POST] /channels/UCtest123/sync: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/channels/UCtest123/sync\"\"\n\necho -n \"\"[POST] /channels/UCtest123/sync-stats: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/channels/UCtest123/sync-stats\"\"\n\necho -n \"\"[POST] /channels/UCtest123/generate-daily-stats: \"\"\ncurl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST \"\"$BASE_URL/channels/UCtest123/generate-daily-stats\"\")",
      "Bash(# 测试可能超时的端点，使用较短的超时时间\necho -n \"\"[POST] /channels/sync-all-stats: \"\"\ntimeout 5 curl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST http://localhost:3001/api/channels/sync-all-stats || echo \"\"TIMEOUT\"\"\n\necho -n \"\"[POST] /cron/sync-all-channels: \"\"\ntimeout 5 curl -s -o /dev/null -w \"\"%{http_code}\\n\"\" -X POST http://localhost:3001/api/cron/sync-all-channels || echo \"\"TIMEOUT\"\")",
      "Bash(touch:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(USE_SYSTEM_7ZA=true npm run build:mac)",
      "Bash(ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true npm run build:mac)",
      "Bash(# 使用 ImageMagick 或创建简单的占位图标\nif command -v convert &> /dev/null; then\n    convert -size 512x512 xc:gray -fill black -draw \"\"text 100,256 ''YouTube Radar''\"\" build/icon.png\nelse\n    # 如果没有 ImageMagick，创建一个简单的 SVG 并转换\n    echo ''<?xml version=\"\"1.0\"\" encoding=\"\"UTF-8\"\"?>\n<svg width=\"\"512\"\" height=\"\"512\"\" xmlns=\"\"http://www.w3.org/2000/svg\"\">\n  <rect width=\"\"512\"\" height=\"\"512\"\" fill=\"\"#2563eb\"\"/>\n  <text x=\"\"256\"\" y=\"\"256\"\" font-family=\"\"Arial\"\" font-size=\"\"48\"\" fill=\"\"white\"\" text-anchor=\"\"middle\"\" dominant-baseline=\"\"middle\"\">YouTube Radar</text>\n</svg>'' > build/icon.svg\nfi)",
      "Bash(python3:*)",
      "Bash(sips:*)",
      "Bash(PORT=3001 node server.js)",
      "Bash(electron:*)",
      "Bash(./prepare-build.sh:*)",
      "Bash(\"dist-electron/mac-arm64/YouTube Radar.app/Contents/MacOS/YouTube Radar\")",
      "Bash(./create-windows-icons.sh:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "Bash(vercel:*)",
      "Bash(PORT=3001 npm run start)",
      "WebFetch(domain:youtuberadar888.vercel.app)",
      "Bash(./setup-vercel-db.sh:*)",
      "Bash(git checkout:*)",
      "Bash(for i in {1..3})",
      "Bash(do echo -n \"尝试 $i: \")",
      "Bash(done)",
      "Bash(gh repo view:*)",
      "Bash(nslookup:*)",
      "Bash(nc:*)",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:youtube-radar-9fc4fbxgo-xiaotiaochaos-projects.vercel.app)",
      "Bash(env)",
      "Bash(timeout 10s npm run dev)",
      "Bash(gtimeout:*)"
    ],
    "deny": []
  }
}